        -:    0:Source:C:/Users/aniru/AppData/Local/JetBrains/Toolbox/apps/CLion/ch-0/213.6461.75/bin/mingw/lib/gcc/x86_64-w64-mingw32/11.2.0/include/c++/x86_64-w64-mingw32/bits/ctype_inline.h
        -:    0:Graph:C:\Users\aniru\Desktop\code\src\private\cs6015\msdscript\cmake-build-debug-coverage\CMakeFiles\msdscript.dir\main.cpp.gcno
        -:    0:Data:C:\Users\aniru\Desktop\code\src\private\cs6015\msdscript\cmake-build-debug-coverage\CMakeFiles\msdscript.dir\main.cpp.gcda
        -:    0:Runs:1
        -:    1:// Locale support -*- C++ -*-
        -:    2:
        -:    3:// Copyright (C) 2000-2021 Free Software Foundation, Inc.
        -:    4://
        -:    5:// This file is part of the GNU ISO C++ Library.  This library is free
        -:    6:// software; you can redistribute it and/or modify it under the
        -:    7:// terms of the GNU General Public License as published by the
        -:    8:// Free Software Foundation; either version 3, or (at your option)
        -:    9:// any later version.
        -:   10:
        -:   11:// This library is distributed in the hope that it will be useful,
        -:   12:// but WITHOUT ANY WARRANTY; without even the implied warranty of
        -:   13:// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        -:   14:// GNU General Public License for more details.
        -:   15:
        -:   16:// Under Section 7 of GPL version 3, you are granted additional
        -:   17:// permissions described in the GCC Runtime Library Exception, version
        -:   18:// 3.1, as published by the Free Software Foundation.
        -:   19:
        -:   20:// You should have received a copy of the GNU General Public License and
        -:   21:// a copy of the GCC Runtime Library Exception along with this program;
        -:   22:// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
        -:   23:// <http://www.gnu.org/licenses/>.
        -:   24:
        -:   25:/** @file bits/ctype_inline.h
        -:   26: *  This is an internal header file, included by other library headers.
        -:   27: *  Do not attempt to use it directly. @headername{locale}
        -:   28: */
        -:   29:
        -:   30://
        -:   31:// ISO C++ 14882: 22.1  Locales
        -:   32://
        -:   33:
        -:   34:// ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)
        -:   35:// functions go in ctype.cc
        -:   36:
        -:   37:namespace std _GLIBCXX_VISIBILITY(default)
        -:   38:{
        -:   39:_GLIBCXX_BEGIN_NAMESPACE_VERSION
        -:   40:
        -:   41:  bool
function _ZNKSt5ctypeIcE2isEtc called 0 returned 0% blocks executed 0%
    #####:   42:  ctype<char>::
        -:   43:  is(mask __m, char __c) const
    #####:   44:  { return (_M_table[static_cast<unsigned char>(__c) ] & __m); }
    %%%%%:   44-block  0
        -:   45:
        -:   46:
        -:   47:  const char*
        -:   48:  ctype<char>::
        -:   49:  is(const char* __low, const char* __high, mask* __vec) const
        -:   50:  {
        -:   51:    while (__low < __high)
        -:   52:      *__vec++ = _M_table[static_cast<unsigned char>(*__low++)];
        -:   53:    return __high;
        -:   54:  }
        -:   55:
        -:   56:  const char*
        -:   57:  ctype<char>::
        -:   58:  scan_is(mask __m, const char* __low, const char* __high) const
        -:   59:  {
        -:   60:    while (__low < __high && !this->is(__m, *__low))
        -:   61:      ++__low;
        -:   62:    return __low;
        -:   63:  }
        -:   64:
        -:   65:  const char*
        -:   66:  ctype<char>::
        -:   67:  scan_not(mask __m, const char* __low, const char* __high) const
        -:   68:  {
        -:   69:    while (__low < __high && this->is(__m, *__low) != 0)
        -:   70:      ++__low;
        -:   71:    return __low;
        -:   72:  }
        -:   73:
        -:   74:_GLIBCXX_END_NAMESPACE_VERSION
        -:   75:} // namespace
