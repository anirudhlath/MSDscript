        -:    0:Source:C:/Users/aniru/Desktop/code/src/private/cs6015/msdscript/Expr.cpp
        -:    0:Graph:C:\Users\aniru\Desktop\code\src\private\cs6015\msdscript\cmake-build-debug-coverage\CMakeFiles\msdscript.dir\Expr.cpp.gcno
        -:    0:Data:C:\Users\aniru\Desktop\code\src\private\cs6015\msdscript\cmake-build-debug-coverage\CMakeFiles\msdscript.dir\Expr.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by aniru on 1/19/2022.
        -:    3://
        -:    4:
        -:    5:#include "Expr.h"
        -:    6:#include "catch.hpp"
        -:    7:#include <stdexcept>
        -:    8:#include <sstream>
        -:    9:
function _ZN3NumC2Ei called 14 returned 100% blocks executed 100%
       14:   10:Num::Num(int val) {
       14:   10-block  0
call    0 returned 14
       14:   11:    this->val = val;
       14:   12:}
        -:   13:
function _ZN3AddC2EP4ExprS1_ called 13 returned 100% blocks executed 100%
       13:   14:Add::Add(Expr *lhs, Expr *rhs) {
       13:   14-block  0
call    0 returned 13
       13:   15:    this->lhs = lhs;
       13:   16:    this->rhs = rhs;
       13:   17:}
        -:   18:
function _ZN4MultC2EP4ExprS1_ called 19 returned 100% blocks executed 100%
       19:   19:Mult::Mult(Expr *lhs, Expr *rhs) {
       19:   19-block  0
call    0 returned 19
       19:   20:    this->lhs = lhs;
       19:   21:    this->rhs = rhs;
       19:   22:}
        -:   23:
function _ZN3Num6equalsEP4Expr called 30 returned 100% blocks executed 86%
       30:   24:bool Num::equals(Expr *e) {
      30*:   25:    Num *num = dynamic_cast<Num*>(e);
       30:   25-block  0
branch  0 taken 30 (fallthrough)
branch  1 taken 0
       30:   25-block  1
    %%%%%:   25-block  2
       30:   26:    if(num == nullptr) {
       30:   26-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 29
        1:   27:        return false;
        1:   27-block  0
        -:   28:    } else {
       29:   29:        return this->val == num->val;
       29:   29-block  0
        -:   30:    }
        -:   31:}
        -:   32:
function _ZN4Mult6equalsEP4Expr called 11 returned 100% blocks executed 92%
       11:   33:bool Mult::equals(Expr *e) {
      11*:   34:    Mult *mult = dynamic_cast<Mult*>(e);
       11:   34-block  0
branch  0 taken 11 (fallthrough)
branch  1 taken 0
       11:   34-block  1
    %%%%%:   34-block  2
       11:   35:    if(mult == nullptr) {
       11:   35-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 10
        1:   36:        return false;
        1:   36-block  0
        -:   37:    } else {
       10:   38:        return (this->lhs->equals(mult->lhs) && this->rhs->equals(mult->rhs));
       10:   38-block  0
call    0 returned 10
branch  1 taken 8 (fallthrough)
branch  2 taken 2
        8:   38-block  1
call    3 returned 8
branch  4 taken 7 (fallthrough)
branch  5 taken 1
        7:   38-block  2
        3:   38-block  3
       10:   38-block  4
        -:   39:    }
        -:   40:}
        -:   41:
function _ZN3Add6equalsEP4Expr called 10 returned 100% blocks executed 92%
       10:   42:bool Add::equals(Expr *e) {
      10*:   43:    Add *add = dynamic_cast<Add*>(e);
       10:   43-block  0
branch  0 taken 10 (fallthrough)
branch  1 taken 0
       10:   43-block  1
    %%%%%:   43-block  2
       10:   44:    if(add == nullptr) {
       10:   44-block  0
branch  0 taken 2 (fallthrough)
branch  1 taken 8
        2:   45:        return false;
        2:   45-block  0
        -:   46:    } else {
        8:   47:        return (this->lhs->equals(add->lhs) && this->rhs->equals(add->rhs));
        8:   47-block  0
call    0 returned 8
branch  1 taken 6 (fallthrough)
branch  2 taken 2
        6:   47-block  1
call    3 returned 6
branch  4 taken 6 (fallthrough)
branch  5 taken 0
        6:   47-block  2
        2:   47-block  3
        8:   47-block  4
        -:   48:    }
        -:   49:}
        -:   50:
function _ZN3VarC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 8 returned 100% blocks executed 83%
        8:   51:Var::Var(std::string val) {
        8:   51-block  0
call    0 returned 8
call    1 returned 8
        8:   52:    this->val = val;
call    0 returned 8
branch  1 taken 8 (fallthrough)
branch  2 taken 0 (throw)
        8:   53:}
        8:   53-block  0
    $$$$$:   53-block  1
call    0 never executed
        -:   54:
function _ZN3Var6equalsEP4Expr called 7 returned 100% blocks executed 86%
        7:   55:bool Var::equals(Expr *e) {
       7*:   56:    Var *var = dynamic_cast<Var*>(e);
        7:   56-block  0
branch  0 taken 7 (fallthrough)
branch  1 taken 0
        7:   56-block  1
    %%%%%:   56-block  2
        7:   57:    if(var == nullptr) {
        7:   57-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 6
        1:   58:        return false;
        1:   58-block  0
        -:   59:    } else {
        6:   60:        return this->val == var->val;
        6:   60-block  0
call    0 returned 6
        -:   61:    }
        -:   62:}
        -:   63:
function _ZN3Num6interpEv called 15 returned 100% blocks executed 100%
       15:   64:int Num::interp() {
       15:   65:    return this->val;
       15:   65-block  0
        -:   66:}
        -:   67:
function _ZN4Mult6interpEv called 5 returned 80% blocks executed 100%
        5:   68:int Mult::interp() {
        5:   69:    return this->lhs->interp() * this->rhs->interp();
        5:   69-block  0
call    0 returned 4
call    1 returned 4
        -:   70:}
        -:   71:
function _ZN3Add6interpEv called 3 returned 100% blocks executed 100%
        3:   72:int Add::interp() {
        3:   73:    return this->lhs->interp() + this->rhs->interp();
        3:   73-block  0
call    0 returned 3
call    1 returned 3
        -:   74:}
        -:   75:
function _ZN3Var6interpEv called 3 returned 0% blocks executed 80%
        3:   76:int Var::interp() {
        3:   77:    throw std::runtime_error("Error occurred, a variable cannot be interpreted.");
        3:   77-block  0
call    0 returned 3
call    1 returned 3
branch  2 taken 3 (fallthrough)
branch  3 taken 0 (throw)
        3:   77-block  1
call    4 returned 0
    $$$$$:   77-block  2
call    5 never executed
        -:   78:}
        -:   79:
function _ZN4Expr12has_variableEv called 6 returned 100% blocks executed 90%
        6:   80:bool Expr::has_variable() {
        6:   81:    bool result = false;
        -:   82:    try {
        6:   83:        this->interp();
        6:   83-block  0
call    0 returned 6
branch  1 taken 4 (fallthrough)
branch  2 taken 2 (throw)
        2:   84:    } catch(std::runtime_error) {
        2:   84-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 2
        2:   84-block  1
call    2 returned 2
call    3 returned 2
        2:   85:        result = true;
        2:   86:    }
call    0 returned 2
call    1 returned 2
        6:   87:    return result;
        6:   87-block  0
        6:   87-block  1
        -:   88:}
        -:   89:
function _ZN3Num5substENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP4Expr called 6 returned 100% blocks executed 100%
        6:   90:Expr* Num::subst(std::string var, Expr* e) {
        6:   91:    return this;
        6:   91-block  0
        -:   92:}
        -:   93:
function _ZN3Add5substENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP4Expr called 2 returned 100% blocks executed 69%
        2:   94:Expr* Add::subst(std::string var, Expr* e) {
        2:   95:    return new Add(lhs->subst(var, e), rhs->subst(var, e));
        2:   95-block  0
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0 (throw)
        2:   95-block  1
call    4 returned 2
branch  5 taken 2 (fallthrough)
branch  6 taken 0 (throw)
        2:   95-block  2
call    7 returned 2
branch  8 taken 2 (fallthrough)
branch  9 taken 0 (throw)
        2:   95-block  3
call   10 returned 2
branch 11 taken 2 (fallthrough)
branch 12 taken 0 (throw)
        2:   95-block  4
call   13 returned 2
call   14 returned 2
call   15 returned 2
        2:   95-block  5
    $$$$$:   95-block  6
call   16 never executed
    $$$$$:   95-block  7
    $$$$$:   95-block  8
call   17 never executed
        -:   96:}
        -:   97:
function _ZN4Mult5substENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP4Expr called 1 returned 100% blocks executed 69%
        1:   98:Expr* Mult::subst(std::string var, Expr* e) {
        1:   99:    return new Mult(lhs->subst(var, e), rhs->subst(var, e));
        1:   99-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   99-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   99-block  2
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:   99-block  3
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
        1:   99-block  4
call   13 returned 1
call   14 returned 1
call   15 returned 1
        1:   99-block  5
    $$$$$:   99-block  6
call   16 never executed
    $$$$$:   99-block  7
    $$$$$:   99-block  8
call   17 never executed
        -:  100:}
        -:  101:
function _ZN3Var5substENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP4Expr called 3 returned 100% blocks executed 100%
        3:  102:Expr* Var::subst(std::string var, Expr* e) {
        3:  103:    if(this->val == var)
        3:  103-block  0
call    0 returned 3
branch  1 taken 2 (fallthrough)
branch  2 taken 1
        2:  104:        return e;
        2:  104-block  0
        1:  105:    return this;
        1:  105-block  0
        -:  106:}
        -:  107:
function _ZN3Num5printERSo called 30 returned 100% blocks executed 100%
       30:  108:void Num::print(std::ostream &out) {
       30:  109:    out << val;
       30:  109-block  0
call    0 returned 30
       30:  110:}
        -:  111:
function _ZN3Num12pretty_printERSoi called 20 returned 100% blocks executed 100%
       20:  112:void Num::pretty_print(std::ostream &out, int precedence) {
       20:  113:    this->print(out);
       20:  113-block  0
call    0 returned 20
        -:  114:
       20:  115:}
        -:  116:
function _ZN4Mult5printERSo called 5 returned 100% blocks executed 100%
        5:  117:void Mult::print(std::ostream &out) {
        5:  118:    out << '(';
        5:  118-block  0
call    0 returned 5
        5:  119:    lhs->print(out);
call    0 returned 5
        5:  120:    out << '*';
call    0 returned 5
        5:  121:    rhs->print(out);
call    0 returned 5
        5:  122:    out << ')';
call    0 returned 5
        5:  123:}
        -:  124:
function _ZN4Mult12pretty_printERSoi called 11 returned 100% blocks executed 100%
       11:  125:void Mult::pretty_print(std::ostream &out, int precedence) {
       11:  126:    if (precedence >= 2) {
       11:  126-block  0
branch  0 taken 2 (fallthrough)
branch  1 taken 9
        2:  127:        out << '(';
        2:  127-block  0
call    0 returned 2
        -:  128:    }
       11:  129:    lhs->pretty_print(out, precedence+1);
       11:  129-block  0
call    0 returned 11
       11:  130:    out << " * ";
call    0 returned 11
       11:  131:    rhs->pretty_print(out, precedence+1);
call    0 returned 11
       11:  132:    if (precedence >= 2) {
branch  0 taken 2 (fallthrough)
branch  1 taken 9
        2:  133:        out << ')';
        2:  133-block  0
call    0 returned 2
        -:  134:    }
       11:  135:}
        -:  136:
function _ZN3Add5printERSo called 3 returned 100% blocks executed 100%
        3:  137:void Add::print(std::ostream &out) {
        3:  138:    out << '(';
        3:  138-block  0
call    0 returned 3
        3:  139:    lhs->print(out);
call    0 returned 3
        3:  140:    out << '+';
call    0 returned 3
        3:  141:    rhs->print(out);
call    0 returned 3
        3:  142:    out << ')';
call    0 returned 3
        3:  143:}
        -:  144:
function _ZN3Add12pretty_printERSoi called 5 returned 100% blocks executed 100%
        5:  145:void Add::pretty_print(std::ostream &out, int precedence) {
        5:  146:    if (precedence >= 1) {
        5:  146-block  0
branch  0 taken 4 (fallthrough)
branch  1 taken 1
        4:  147:        out << '(';
        4:  147-block  0
call    0 returned 4
        -:  148:    }
        5:  149:    lhs->pretty_print(out, precedence+1);
        5:  149-block  0
call    0 returned 5
        5:  150:    out << " + ";
call    0 returned 5
        5:  151:    rhs->pretty_print(out, precedence+1);
call    0 returned 5
        5:  152:    if (precedence >= 1) {
branch  0 taken 4 (fallthrough)
branch  1 taken 1
        4:  153:        out << ')';
        4:  153-block  0
call    0 returned 4
        -:  154:    }
        -:  155:
        5:  156:}
        -:  157:
function _ZN3Var5printERSo called 2 returned 100% blocks executed 100%
        2:  158:void Var::print(std::ostream &out) {
        2:  159:    out << val;
        2:  159-block  0
call    0 returned 2
        2:  160:}
        -:  161:
function _ZN3Var12pretty_printERSoi called 1 returned 100% blocks executed 100%
        1:  162:void Var::pretty_print(std::ostream &out, int precedence) {
        1:  163:    this->print(out);
        1:  163-block  0
call    0 returned 1
        -:  164:
        1:  165:}
        -:  166:
function _ZN4Expr9to_stringB5cxx11Eb called 8 returned 100% blocks executed 65%
        8:  167:std::string Expr::to_string(bool isPretty) {
       16:  168:    std::stringstream out("");
        8:  168-block  0
call    0 returned 8
call    1 returned 8
call    2 returned 8
branch  3 taken 8 (fallthrough)
branch  4 taken 0 (throw)
        8:  168-block  1
call    5 returned 8
branch  6 taken 8 (fallthrough)
branch  7 taken 0 (throw)
call    8 returned 8
    $$$$$:  168-block  2
    $$$$$:  168-block  3
        8:  169:    if (!isPretty) {
branch  0 taken 3 (fallthrough)
branch  1 taken 5
        3:  170:        this->print(out);
        3:  170-block  0
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        -:  171:    } else {
        5:  172:        this->pretty_print(out, 0);
        5:  172-block  0
call    0 returned 5
branch  1 taken 5 (fallthrough)
branch  2 taken 0 (throw)
        -:  173:    }
       16:  174:    return out.str();
        8:  174-block  0
call    0 returned 8
branch  1 taken 8 (fallthrough)
branch  2 taken 0 (throw)
        8:  174-block  1
        8:  175:}
        8:  175-block  0
call    0 returned 8
    $$$$$:  175-block  1
call    1 never executed
        -:  176:
function _ZL19C_A_T_C_H_T_E_S_T_0v called 1 returned 100% blocks executed 43%
        1:  177:TEST_CASE( "equals" ) {
        -:  178:    // Num
        1:  179:    Expr *two = new Num(2);
        1:  179-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  179-block  1
call    3 returned 1
        1:  180:    Expr *twod = new Num(2);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  180-block  0
call    3 returned 1
        1:  181:    Expr *three = new Num(3);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  181-block  0
call    3 returned 1
        -:  182:
        1:  183:    CHECK(two->equals(two) == true);
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  183-block  0
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  183-block  1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  183-block  2
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  183-block  3
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  183-block  4
call   18 returned 1
        1:  183-block  5
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:  183-block  6
call   22 returned 1
    $$$$$:  183-block  7
    $$$$$:  183-block  8
    $$$$$:  183-block  9
    $$$$$:  183-block 10
call   23 never executed
    $$$$$:  183-block 11
    $$$$$:  183-block 12
    $$$$$:  183-block 13
    $$$$$:  183-block 14
    $$$$$:  183-block 15
call   24 never executed
call   25 never executed
branch 26 never executed
branch 27 never executed
    $$$$$:  183-block 16
call   28 never executed
branch 29 never executed
branch 30 never executed
    $$$$$:  183-block 17
call   31 never executed
    $$$$$:  183-block 18
call   32 never executed
        1:  184:    CHECK(two->equals(twod) == true);
        1:  184-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  184-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  184-block  2
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  184-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  184-block  4
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  184-block  5
call   18 returned 1
        1:  184-block  6
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:  184-block  7
call   22 returned 1
    $$$$$:  184-block  8
    $$$$$:  184-block  9
    $$$$$:  184-block 10
    $$$$$:  184-block 11
call   23 never executed
    $$$$$:  184-block 12
    $$$$$:  184-block 13
    $$$$$:  184-block 14
    $$$$$:  184-block 15
    $$$$$:  184-block 16
call   24 never executed
call   25 never executed
branch 26 never executed
branch 27 never executed
    $$$$$:  184-block 17
call   28 never executed
branch 29 never executed
branch 30 never executed
    $$$$$:  184-block 18
call   31 never executed
    $$$$$:  184-block 19
call   32 never executed
        1:  185:    CHECK(two->equals(three) == false);
        1:  185-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  185-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  185-block  2
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  185-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  185-block  4
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  185-block  5
call   18 returned 1
        1:  185-block  6
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:  185-block  7
call   22 returned 1
    $$$$$:  185-block  8
    $$$$$:  185-block  9
    $$$$$:  185-block 10
    $$$$$:  185-block 11
call   23 never executed
    $$$$$:  185-block 12
    $$$$$:  185-block 13
    $$$$$:  185-block 14
    $$$$$:  185-block 15
    $$$$$:  185-block 16
call   24 never executed
call   25 never executed
branch 26 never executed
branch 27 never executed
    $$$$$:  185-block 17
call   28 never executed
branch 29 never executed
branch 30 never executed
    $$$$$:  185-block 18
call   31 never executed
    $$$$$:  185-block 19
call   32 never executed
        1:  186:    CHECK(two->interp() == 2);
        1:  186-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  186-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  186-block  2
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  186-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  186-block  4
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  186-block  5
call   18 returned 1
        1:  186-block  6
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:  186-block  7
call   22 returned 1
    $$$$$:  186-block  8
    $$$$$:  186-block  9
    $$$$$:  186-block 10
    $$$$$:  186-block 11
call   23 never executed
    $$$$$:  186-block 12
    $$$$$:  186-block 13
    $$$$$:  186-block 14
    $$$$$:  186-block 15
    $$$$$:  186-block 16
    $$$$$:  186-block 17
    $$$$$:  186-block 18
call   24 never executed
call   25 never executed
branch 26 never executed
branch 27 never executed
    $$$$$:  186-block 19
call   28 never executed
branch 29 never executed
branch 30 never executed
    $$$$$:  186-block 20
call   31 never executed
    $$$$$:  186-block 21
call   32 never executed
        1:  187:    CHECK(three->interp() == 3);
        1:  187-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  187-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  187-block  2
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  187-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  187-block  4
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  187-block  5
call   18 returned 1
        1:  187-block  6
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:  187-block  7
call   22 returned 1
    $$$$$:  187-block  8
    $$$$$:  187-block  9
    $$$$$:  187-block 10
    $$$$$:  187-block 11
call   23 never executed
    $$$$$:  187-block 12
    $$$$$:  187-block 13
    $$$$$:  187-block 14
    $$$$$:  187-block 15
    $$$$$:  187-block 16
    $$$$$:  187-block 17
    $$$$$:  187-block 18
call   24 never executed
call   25 never executed
branch 26 never executed
branch 27 never executed
    $$$$$:  187-block 19
call   28 never executed
branch 29 never executed
branch 30 never executed
    $$$$$:  187-block 20
call   31 never executed
    $$$$$:  187-block 21
call   32 never executed
        1:  188:    CHECK(three->has_variable() == false);
        1:  188-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  188-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  188-block  2
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  188-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  188-block  4
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  188-block  5
call   18 returned 1
        1:  188-block  6
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:  188-block  7
call   22 returned 1
    $$$$$:  188-block  8
    $$$$$:  188-block  9
    $$$$$:  188-block 10
    $$$$$:  188-block 11
call   23 never executed
    $$$$$:  188-block 12
    $$$$$:  188-block 13
    $$$$$:  188-block 14
    $$$$$:  188-block 15
    $$$$$:  188-block 16
call   24 never executed
call   25 never executed
branch 26 never executed
branch 27 never executed
    $$$$$:  188-block 17
call   28 never executed
branch 29 never executed
branch 30 never executed
    $$$$$:  188-block 18
call   31 never executed
    $$$$$:  188-block 19
call   32 never executed
        1:  189:    CHECK(three->subst("x", two) == three);
        1:  189-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  189-block  1
call    6 returned 1
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:  189-block  2
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
        1:  189-block  3
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:  189-block  4
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
        1:  189-block  5
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:  189-block  6
call   22 returned 1
call   23 returned 1
call   24 returned 1
        1:  189-block  7
call   25 returned 1
branch 26 taken 1 (fallthrough)
branch 27 taken 0 (throw)
        1:  189-block  8
call   28 returned 1
    $$$$$:  189-block  9
    $$$$$:  189-block 10
    $$$$$:  189-block 11
    $$$$$:  189-block 12
call   29 never executed
    $$$$$:  189-block 13
    $$$$$:  189-block 14
    $$$$$:  189-block 15
    $$$$$:  189-block 16
    $$$$$:  189-block 17
call   30 never executed
    $$$$$:  189-block 18
    $$$$$:  189-block 19
call   31 never executed
    $$$$$:  189-block 20
    $$$$$:  189-block 21
    $$$$$:  189-block 22
call   32 never executed
call   33 never executed
branch 34 never executed
branch 35 never executed
    $$$$$:  189-block 23
call   36 never executed
branch 37 never executed
branch 38 never executed
    $$$$$:  189-block 24
call   39 never executed
    $$$$$:  189-block 25
call   40 never executed
        -:  190:
        -:  191:    // Var
        1:  192:    Expr *var1 = new Var("hello");
        1:  192-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  192-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  192-block  2
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:  192-block  3
call   10 returned 1
call   11 returned 1
    $$$$$:  192-block  4
call   12 never executed
    $$$$$:  192-block  5
call   13 never executed
    $$$$$:  192-block  6
    $$$$$:  192-block  7
call   14 never executed
    $$$$$:  192-block  8
        1:  193:    Expr *var1d = new Var("hello");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  193-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  193-block  1
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:  193-block  2
call   10 returned 1
call   11 returned 1
    $$$$$:  193-block  3
call   12 never executed
    $$$$$:  193-block  4
call   13 never executed
    $$$$$:  193-block  5
    $$$$$:  193-block  6
call   14 never executed
    $$$$$:  193-block  7
        1:  194:    Expr *var2 = new Var("world");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  194-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  194-block  1
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:  194-block  2
call   10 returned 1
call   11 returned 1
    $$$$$:  194-block  3
call   12 never executed
    $$$$$:  194-block  4
call   13 never executed
    $$$$$:  194-block  5
    $$$$$:  194-block  6
call   14 never executed
    $$$$$:  194-block  7
        -:  195:
        1:  196:    CHECK(var1->equals(var1) == true);
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  196-block  0
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  196-block  1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  196-block  2
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  196-block  3
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  196-block  4
call   18 returned 1
        1:  196-block  5
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:  196-block  6
call   22 returned 1
    $$$$$:  196-block  7
    $$$$$:  196-block  8
    $$$$$:  196-block  9
    $$$$$:  196-block 10
call   23 never executed
    $$$$$:  196-block 11
    $$$$$:  196-block 12
    $$$$$:  196-block 13
    $$$$$:  196-block 14
    $$$$$:  196-block 15
call   24 never executed
call   25 never executed
branch 26 never executed
branch 27 never executed
    $$$$$:  196-block 16
call   28 never executed
branch 29 never executed
branch 30 never executed
    $$$$$:  196-block 17
call   31 never executed
    $$$$$:  196-block 18
call   32 never executed
        1:  197:    CHECK(var1->equals(var1d) == true);
        1:  197-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  197-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  197-block  2
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  197-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  197-block  4
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  197-block  5
call   18 returned 1
        1:  197-block  6
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:  197-block  7
call   22 returned 1
    $$$$$:  197-block  8
    $$$$$:  197-block  9
    $$$$$:  197-block 10
    $$$$$:  197-block 11
call   23 never executed
    $$$$$:  197-block 12
    $$$$$:  197-block 13
    $$$$$:  197-block 14
    $$$$$:  197-block 15
    $$$$$:  197-block 16
call   24 never executed
call   25 never executed
branch 26 never executed
branch 27 never executed
    $$$$$:  197-block 17
call   28 never executed
branch 29 never executed
branch 30 never executed
    $$$$$:  197-block 18
call   31 never executed
    $$$$$:  197-block 19
call   32 never executed
        1:  198:    CHECK(var1->equals(var2) == false);
        1:  198-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  198-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  198-block  2
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  198-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  198-block  4
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  198-block  5
call   18 returned 1
        1:  198-block  6
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:  198-block  7
call   22 returned 1
    $$$$$:  198-block  8
    $$$$$:  198-block  9
    $$$$$:  198-block 10
    $$$$$:  198-block 11
call   23 never executed
    $$$$$:  198-block 12
    $$$$$:  198-block 13
    $$$$$:  198-block 14
    $$$$$:  198-block 15
    $$$$$:  198-block 16
call   24 never executed
call   25 never executed
branch 26 never executed
branch 27 never executed
    $$$$$:  198-block 17
call   28 never executed
branch 29 never executed
branch 30 never executed
    $$$$$:  198-block 18
call   31 never executed
    $$$$$:  198-block 19
call   32 never executed
       3*:  199:    CHECK_THROWS_WITH( (new Var("x"))->interp(), "Error occurred, a variable cannot be interpreted." );
        1:  199-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  199-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  199-block  2
branch  9 taken 1 (fallthrough)
branch 10 taken 0
        1:  199-block  3
call   11 returned 1
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  199-block  4
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  199-block  5
call   18 returned 1
branch 19 taken 1 (fallthrough)
branch 20 taken 0 (throw)
        1:  199-block  6
call   21 returned 1
branch 22 taken 0 (fallthrough)
branch 23 taken 1 (throw)
    %%%%%:  199-block  7
call   24 never executed
call   25 never executed
call   26 never executed
branch 27 never executed
branch 28 never executed
    %%%%%:  199-block  8
call   29 never executed
branch 30 never executed
branch 31 never executed
        1:  199-block  9
call   32 returned 1
branch 33 taken 1 (fallthrough)
branch 34 taken 0 (throw)
        1:  199-block 10
call   35 returned 1
    $$$$$:  199-block 11
    $$$$$:  199-block 12
    $$$$$:  199-block 13
    $$$$$:  199-block 14
call   36 never executed
        1:  199-block 15
call   37 returned 1
        1:  199-block 16
        1:  199-block 17
call   38 returned 1
        1:  199-block 18
        1:  199-block 19
        1:  199-block 20
call   39 returned 1
call   40 returned 1
call   41 returned 1
call   42 returned 1
branch 43 taken 1 (fallthrough)
branch 44 taken 0 (throw)
        1:  199-block 21
call   45 returned 1
branch 46 taken 1 (fallthrough)
branch 47 taken 0 (throw)
        1:  199-block 22
call   48 returned 1
call   49 returned 1
call   50 returned 1
branch 51 taken 1 (fallthrough)
branch 52 taken 0 (throw)
    $$$$$:  199-block 23
call   53 never executed
    $$$$$:  199-block 24
    $$$$$:  199-block 25
call   54 never executed
    $$$$$:  199-block 26
    $$$$$:  199-block 27
    $$$$$:  199-block 28
call   55 never executed
    $$$$$:  199-block 29
call   56 never executed
        1:  200:    CHECK(var1->has_variable() == true);
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  200-block  0
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  200-block  1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  200-block  2
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  200-block  3
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  200-block  4
call   18 returned 1
        1:  200-block  5
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:  200-block  6
call   22 returned 1
    $$$$$:  200-block  7
    $$$$$:  200-block  8
    $$$$$:  200-block  9
    $$$$$:  200-block 10
call   23 never executed
    $$$$$:  200-block 11
    $$$$$:  200-block 12
    $$$$$:  200-block 13
    $$$$$:  200-block 14
    $$$$$:  200-block 15
call   24 never executed
call   25 never executed
branch 26 never executed
branch 27 never executed
    $$$$$:  200-block 16
call   28 never executed
branch 29 never executed
branch 30 never executed
    $$$$$:  200-block 17
call   31 never executed
    $$$$$:  200-block 18
call   32 never executed
        1:  201:    CHECK(var1->subst("hello", var2)->equals(var2));
        1:  201-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  201-block  1
call    6 returned 1
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:  201-block  2
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
        1:  201-block  3
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:  201-block  4
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
        1:  201-block  5
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:  201-block  6
call   22 returned 1
call   23 returned 1
        1:  201-block  7
call   24 returned 1
branch 25 taken 1 (fallthrough)
branch 26 taken 0 (throw)
        1:  201-block  8
call   27 returned 1
    $$$$$:  201-block  9
    $$$$$:  201-block 10
    $$$$$:  201-block 11
    $$$$$:  201-block 12
    $$$$$:  201-block 13
    $$$$$:  201-block 14
call   28 never executed
    $$$$$:  201-block 15
    $$$$$:  201-block 16
call   29 never executed
    $$$$$:  201-block 17
    $$$$$:  201-block 18
    $$$$$:  201-block 19
call   30 never executed
call   31 never executed
branch 32 never executed
branch 33 never executed
    $$$$$:  201-block 20
call   34 never executed
branch 35 never executed
branch 36 never executed
    $$$$$:  201-block 21
call   37 never executed
    $$$$$:  201-block 22
call   38 never executed
        1:  202:    CHECK(var1->subst("hell", var2)->equals(var1));
        1:  202-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  202-block  1
call    6 returned 1
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:  202-block  2
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
        1:  202-block  3
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:  202-block  4
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
        1:  202-block  5
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:  202-block  6
call   22 returned 1
call   23 returned 1
        1:  202-block  7
call   24 returned 1
branch 25 taken 1 (fallthrough)
branch 26 taken 0 (throw)
        1:  202-block  8
call   27 returned 1
    $$$$$:  202-block  9
    $$$$$:  202-block 10
    $$$$$:  202-block 11
    $$$$$:  202-block 12
    $$$$$:  202-block 13
    $$$$$:  202-block 14
call   28 never executed
    $$$$$:  202-block 15
    $$$$$:  202-block 16
call   29 never executed
    $$$$$:  202-block 17
    $$$$$:  202-block 18
    $$$$$:  202-block 19
call   30 never executed
call   31 never executed
branch 32 never executed
branch 33 never executed
    $$$$$:  202-block 20
call   34 never executed
branch 35 never executed
branch 36 never executed
    $$$$$:  202-block 21
call   37 never executed
    $$$$$:  202-block 22
call   38 never executed
        1:  203:    CHECK(var1->to_string(false) == "hello");
        1:  203-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  203-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  203-block  2
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  203-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  203-block  4
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  203-block  5
call   18 returned 1
call   19 returned 1
        1:  203-block  6
call   20 returned 1
branch 21 taken 1 (fallthrough)
branch 22 taken 0 (throw)
        1:  203-block  7
call   23 returned 1
    $$$$$:  203-block  8
    $$$$$:  203-block  9
    $$$$$:  203-block 10
    $$$$$:  203-block 11
call   24 never executed
    $$$$$:  203-block 12
    $$$$$:  203-block 13
    $$$$$:  203-block 14
    $$$$$:  203-block 15
call   25 never executed
    $$$$$:  203-block 16
    $$$$$:  203-block 17
    $$$$$:  203-block 18
call   26 never executed
call   27 never executed
branch 28 never executed
branch 29 never executed
    $$$$$:  203-block 19
call   30 never executed
branch 31 never executed
branch 32 never executed
    $$$$$:  203-block 20
call   33 never executed
    $$$$$:  203-block 21
call   34 never executed
        -:  204:
        -:  205:    // Mult
        1:  206:    Expr *mult1 = new Mult(two, three);
        1:  206-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  206-block  1
call    3 returned 1
        1:  207:    Expr *mult2 = new Mult(three, two);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  207-block  0
call    3 returned 1
        1:  208:    Expr *mult3 = new Mult(three, two);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  208-block  0
call    3 returned 1
        1:  209:    Expr *mult4 = new Mult(two, two);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  209-block  0
call    3 returned 1
        -:  210:
        1:  211:    CHECK(mult1->equals(mult1) == true);
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  211-block  0
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  211-block  1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  211-block  2
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  211-block  3
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  211-block  4
call   18 returned 1
        1:  211-block  5
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:  211-block  6
call   22 returned 1
    $$$$$:  211-block  7
    $$$$$:  211-block  8
    $$$$$:  211-block  9
    $$$$$:  211-block 10
call   23 never executed
    $$$$$:  211-block 11
    $$$$$:  211-block 12
    $$$$$:  211-block 13
    $$$$$:  211-block 14
    $$$$$:  211-block 15
call   24 never executed
call   25 never executed
branch 26 never executed
branch 27 never executed
    $$$$$:  211-block 16
call   28 never executed
branch 29 never executed
branch 30 never executed
    $$$$$:  211-block 17
call   31 never executed
    $$$$$:  211-block 18
call   32 never executed
        1:  212:    CHECK(mult1->equals(mult2) == false);
        1:  212-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  212-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  212-block  2
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  212-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  212-block  4
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  212-block  5
call   18 returned 1
        1:  212-block  6
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:  212-block  7
call   22 returned 1
    $$$$$:  212-block  8
    $$$$$:  212-block  9
    $$$$$:  212-block 10
    $$$$$:  212-block 11
call   23 never executed
    $$$$$:  212-block 12
    $$$$$:  212-block 13
    $$$$$:  212-block 14
    $$$$$:  212-block 15
    $$$$$:  212-block 16
call   24 never executed
call   25 never executed
branch 26 never executed
branch 27 never executed
    $$$$$:  212-block 17
call   28 never executed
branch 29 never executed
branch 30 never executed
    $$$$$:  212-block 18
call   31 never executed
    $$$$$:  212-block 19
call   32 never executed
        1:  213:    CHECK(mult2->equals(mult3) == true);
        1:  213-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  213-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  213-block  2
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  213-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  213-block  4
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  213-block  5
call   18 returned 1
        1:  213-block  6
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:  213-block  7
call   22 returned 1
    $$$$$:  213-block  8
    $$$$$:  213-block  9
    $$$$$:  213-block 10
    $$$$$:  213-block 11
call   23 never executed
    $$$$$:  213-block 12
    $$$$$:  213-block 13
    $$$$$:  213-block 14
    $$$$$:  213-block 15
    $$$$$:  213-block 16
call   24 never executed
call   25 never executed
branch 26 never executed
branch 27 never executed
    $$$$$:  213-block 17
call   28 never executed
branch 29 never executed
branch 30 never executed
    $$$$$:  213-block 18
call   31 never executed
    $$$$$:  213-block 19
call   32 never executed
        1:  214:    CHECK(mult1->equals(mult4) == false);
        1:  214-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  214-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  214-block  2
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  214-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  214-block  4
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  214-block  5
call   18 returned 1
        1:  214-block  6
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:  214-block  7
call   22 returned 1
    $$$$$:  214-block  8
    $$$$$:  214-block  9
    $$$$$:  214-block 10
    $$$$$:  214-block 11
call   23 never executed
    $$$$$:  214-block 12
    $$$$$:  214-block 13
    $$$$$:  214-block 14
    $$$$$:  214-block 15
    $$$$$:  214-block 16
call   24 never executed
call   25 never executed
branch 26 never executed
branch 27 never executed
    $$$$$:  214-block 17
call   28 never executed
branch 29 never executed
branch 30 never executed
    $$$$$:  214-block 18
call   31 never executed
    $$$$$:  214-block 19
call   32 never executed
        1:  215:    CHECK(mult1->interp() == 6);
        1:  215-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  215-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  215-block  2
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  215-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  215-block  4
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  215-block  5
call   18 returned 1
        1:  215-block  6
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:  215-block  7
call   22 returned 1
    $$$$$:  215-block  8
    $$$$$:  215-block  9
    $$$$$:  215-block 10
    $$$$$:  215-block 11
call   23 never executed
    $$$$$:  215-block 12
    $$$$$:  215-block 13
    $$$$$:  215-block 14
    $$$$$:  215-block 15
    $$$$$:  215-block 16
    $$$$$:  215-block 17
    $$$$$:  215-block 18
call   24 never executed
call   25 never executed
branch 26 never executed
branch 27 never executed
    $$$$$:  215-block 19
call   28 never executed
branch 29 never executed
branch 30 never executed
    $$$$$:  215-block 20
call   31 never executed
    $$$$$:  215-block 21
call   32 never executed
        1:  216:    CHECK(mult1->has_variable() == false);
        1:  216-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  216-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  216-block  2
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  216-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  216-block  4
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  216-block  5
call   18 returned 1
        1:  216-block  6
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:  216-block  7
call   22 returned 1
    $$$$$:  216-block  8
    $$$$$:  216-block  9
    $$$$$:  216-block 10
    $$$$$:  216-block 11
call   23 never executed
    $$$$$:  216-block 12
    $$$$$:  216-block 13
    $$$$$:  216-block 14
    $$$$$:  216-block 15
    $$$$$:  216-block 16
call   24 never executed
call   25 never executed
branch 26 never executed
branch 27 never executed
    $$$$$:  216-block 17
call   28 never executed
branch 29 never executed
branch 30 never executed
    $$$$$:  216-block 18
call   31 never executed
    $$$$$:  216-block 19
call   32 never executed
        1:  217:    CHECK(mult1->subst("x", mult3)->equals(mult1));
        1:  217-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  217-block  1
call    6 returned 1
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:  217-block  2
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
        1:  217-block  3
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:  217-block  4
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
        1:  217-block  5
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:  217-block  6
call   22 returned 1
call   23 returned 1
        1:  217-block  7
call   24 returned 1
branch 25 taken 1 (fallthrough)
branch 26 taken 0 (throw)
        1:  217-block  8
call   27 returned 1
    $$$$$:  217-block  9
    $$$$$:  217-block 10
    $$$$$:  217-block 11
    $$$$$:  217-block 12
    $$$$$:  217-block 13
    $$$$$:  217-block 14
call   28 never executed
    $$$$$:  217-block 15
    $$$$$:  217-block 16
call   29 never executed
    $$$$$:  217-block 17
    $$$$$:  217-block 18
    $$$$$:  217-block 19
call   30 never executed
call   31 never executed
branch 32 never executed
branch 33 never executed
    $$$$$:  217-block 20
call   34 never executed
branch 35 never executed
branch 36 never executed
    $$$$$:  217-block 21
call   37 never executed
    $$$$$:  217-block 22
call   38 never executed
        -:  218:
        -:  219:    // Add
        1:  220:    Expr *add1 = new Add(three, two);
        1:  220-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  220-block  1
call    3 returned 1
        1:  221:    Expr *add2 = new Add(three, two);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  221-block  0
call    3 returned 1
        1:  222:    Expr *add3 = new Add(two, three);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  222-block  0
call    3 returned 1
        1:  223:    Expr *add4 = new Add(two, two);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  223-block  0
call    3 returned 1
        -:  224:
        1:  225:    CHECK(add1->equals(add1) == true);
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  225-block  0
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  225-block  1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  225-block  2
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  225-block  3
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  225-block  4
call   18 returned 1
        1:  225-block  5
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:  225-block  6
call   22 returned 1
    $$$$$:  225-block  7
    $$$$$:  225-block  8
    $$$$$:  225-block  9
    $$$$$:  225-block 10
call   23 never executed
    $$$$$:  225-block 11
    $$$$$:  225-block 12
    $$$$$:  225-block 13
    $$$$$:  225-block 14
    $$$$$:  225-block 15
call   24 never executed
call   25 never executed
branch 26 never executed
branch 27 never executed
    $$$$$:  225-block 16
call   28 never executed
branch 29 never executed
branch 30 never executed
    $$$$$:  225-block 17
call   31 never executed
    $$$$$:  225-block 18
call   32 never executed
        1:  226:    CHECK(add1->equals(add2) == true);
        1:  226-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  226-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  226-block  2
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  226-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  226-block  4
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  226-block  5
call   18 returned 1
        1:  226-block  6
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:  226-block  7
call   22 returned 1
    $$$$$:  226-block  8
    $$$$$:  226-block  9
    $$$$$:  226-block 10
    $$$$$:  226-block 11
call   23 never executed
    $$$$$:  226-block 12
    $$$$$:  226-block 13
    $$$$$:  226-block 14
    $$$$$:  226-block 15
    $$$$$:  226-block 16
call   24 never executed
call   25 never executed
branch 26 never executed
branch 27 never executed
    $$$$$:  226-block 17
call   28 never executed
branch 29 never executed
branch 30 never executed
    $$$$$:  226-block 18
call   31 never executed
    $$$$$:  226-block 19
call   32 never executed
        1:  227:    CHECK(add1->equals(add3) == false);
        1:  227-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  227-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  227-block  2
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  227-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  227-block  4
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  227-block  5
call   18 returned 1
        1:  227-block  6
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:  227-block  7
call   22 returned 1
    $$$$$:  227-block  8
    $$$$$:  227-block  9
    $$$$$:  227-block 10
    $$$$$:  227-block 11
call   23 never executed
    $$$$$:  227-block 12
    $$$$$:  227-block 13
    $$$$$:  227-block 14
    $$$$$:  227-block 15
    $$$$$:  227-block 16
call   24 never executed
call   25 never executed
branch 26 never executed
branch 27 never executed
    $$$$$:  227-block 17
call   28 never executed
branch 29 never executed
branch 30 never executed
    $$$$$:  227-block 18
call   31 never executed
    $$$$$:  227-block 19
call   32 never executed
        1:  228:    CHECK(add1->equals(add4) == false);
        1:  228-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  228-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  228-block  2
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  228-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  228-block  4
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  228-block  5
call   18 returned 1
        1:  228-block  6
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:  228-block  7
call   22 returned 1
    $$$$$:  228-block  8
    $$$$$:  228-block  9
    $$$$$:  228-block 10
    $$$$$:  228-block 11
call   23 never executed
    $$$$$:  228-block 12
    $$$$$:  228-block 13
    $$$$$:  228-block 14
    $$$$$:  228-block 15
    $$$$$:  228-block 16
call   24 never executed
call   25 never executed
branch 26 never executed
branch 27 never executed
    $$$$$:  228-block 17
call   28 never executed
branch 29 never executed
branch 30 never executed
    $$$$$:  228-block 18
call   31 never executed
    $$$$$:  228-block 19
call   32 never executed
        1:  229:    CHECK(add1->interp() == 5);
        1:  229-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  229-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  229-block  2
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  229-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  229-block  4
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  229-block  5
call   18 returned 1
        1:  229-block  6
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:  229-block  7
call   22 returned 1
    $$$$$:  229-block  8
    $$$$$:  229-block  9
    $$$$$:  229-block 10
    $$$$$:  229-block 11
call   23 never executed
    $$$$$:  229-block 12
    $$$$$:  229-block 13
    $$$$$:  229-block 14
    $$$$$:  229-block 15
    $$$$$:  229-block 16
    $$$$$:  229-block 17
    $$$$$:  229-block 18
call   24 never executed
call   25 never executed
branch 26 never executed
branch 27 never executed
    $$$$$:  229-block 19
call   28 never executed
branch 29 never executed
branch 30 never executed
    $$$$$:  229-block 20
call   31 never executed
    $$$$$:  229-block 21
call   32 never executed
        1:  230:    CHECK(add1->has_variable() == false);
        1:  230-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  230-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  230-block  2
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  230-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  230-block  4
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  230-block  5
call   18 returned 1
        1:  230-block  6
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:  230-block  7
call   22 returned 1
    $$$$$:  230-block  8
    $$$$$:  230-block  9
    $$$$$:  230-block 10
    $$$$$:  230-block 11
call   23 never executed
    $$$$$:  230-block 12
    $$$$$:  230-block 13
    $$$$$:  230-block 14
    $$$$$:  230-block 15
    $$$$$:  230-block 16
call   24 never executed
call   25 never executed
branch 26 never executed
branch 27 never executed
    $$$$$:  230-block 17
call   28 never executed
branch 29 never executed
branch 30 never executed
    $$$$$:  230-block 18
call   31 never executed
    $$$$$:  230-block 19
call   32 never executed
        1:  231:    CHECK(add1->subst("x", add3)->equals(add1));
        1:  231-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  231-block  1
call    6 returned 1
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:  231-block  2
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
        1:  231-block  3
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:  231-block  4
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
        1:  231-block  5
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:  231-block  6
call   22 returned 1
call   23 returned 1
        1:  231-block  7
call   24 returned 1
branch 25 taken 1 (fallthrough)
branch 26 taken 0 (throw)
        1:  231-block  8
call   27 returned 1
    $$$$$:  231-block  9
    $$$$$:  231-block 10
    $$$$$:  231-block 11
    $$$$$:  231-block 12
    $$$$$:  231-block 13
    $$$$$:  231-block 14
call   28 never executed
    $$$$$:  231-block 15
    $$$$$:  231-block 16
call   29 never executed
    $$$$$:  231-block 17
    $$$$$:  231-block 18
    $$$$$:  231-block 19
call   30 never executed
call   31 never executed
branch 32 never executed
branch 33 never executed
    $$$$$:  231-block 20
call   34 never executed
branch 35 never executed
branch 36 never executed
    $$$$$:  231-block 21
call   37 never executed
    $$$$$:  231-block 22
call   38 never executed
        -:  232:
        -:  233:    // Expr
        1:  234:    Expr *e1 = new Mult(add1, mult1);
        1:  234-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  234-block  1
call    3 returned 1
        1:  235:    Expr *e2 = new Mult(add1, mult1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  235-block  0
call    3 returned 1
        1:  236:    Expr *e3 = new Mult(two, mult1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  236-block  0
call    3 returned 1
        1:  237:    Expr *e5 = new Mult(new Add(add1, mult1), mult1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  237-block  0
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  237-block  1
call    7 returned 1
        1:  238:    Expr *e4 = new Mult(new Var("x"), mult1);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  238-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  238-block  1
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:  238-block  2
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
        1:  238-block  3
call   13 returned 1
call   14 returned 1
call   15 returned 1
    $$$$$:  238-block  4
call   16 never executed
    $$$$$:  238-block  5
call   17 never executed
    $$$$$:  238-block  6
    $$$$$:  238-block  7
call   18 never executed
    $$$$$:  238-block  8
        1:  239:    Expr *e6 = new Mult(new Mult(new Mult(two, two),new Add(var1, three)), new Mult(new Add(two, two),new Mult(two, three)));
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  239-block  0
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  239-block  1
call    7 returned 1
call    8 returned 1
branch  9 taken 1 (fallthrough)
branch 10 taken 0 (throw)
        1:  239-block  2
call   11 returned 1
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  239-block  3
call   15 returned 1
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
        1:  239-block  4
call   19 returned 1
call   20 returned 1
branch 21 taken 1 (fallthrough)
branch 22 taken 0 (throw)
        1:  239-block  5
call   23 returned 1
call   24 returned 1
branch 25 taken 1 (fallthrough)
branch 26 taken 0 (throw)
        1:  239-block  6
call   27 returned 1
        1:  240:    CHECK(e1->equals(e1) == true);
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  240-block  0
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  240-block  1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  240-block  2
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  240-block  3
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  240-block  4
call   18 returned 1
        1:  240-block  5
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:  240-block  6
call   22 returned 1
    $$$$$:  240-block  7
    $$$$$:  240-block  8
    $$$$$:  240-block  9
    $$$$$:  240-block 10
call   23 never executed
    $$$$$:  240-block 11
    $$$$$:  240-block 12
    $$$$$:  240-block 13
    $$$$$:  240-block 14
    $$$$$:  240-block 15
call   24 never executed
call   25 never executed
branch 26 never executed
branch 27 never executed
    $$$$$:  240-block 16
call   28 never executed
branch 29 never executed
branch 30 never executed
    $$$$$:  240-block 17
call   31 never executed
    $$$$$:  240-block 18
call   32 never executed
        1:  241:    CHECK(e1->equals(e2) == true);
        1:  241-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  241-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  241-block  2
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  241-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  241-block  4
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  241-block  5
call   18 returned 1
        1:  241-block  6
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:  241-block  7
call   22 returned 1
    $$$$$:  241-block  8
    $$$$$:  241-block  9
    $$$$$:  241-block 10
    $$$$$:  241-block 11
call   23 never executed
    $$$$$:  241-block 12
    $$$$$:  241-block 13
    $$$$$:  241-block 14
    $$$$$:  241-block 15
    $$$$$:  241-block 16
call   24 never executed
call   25 never executed
branch 26 never executed
branch 27 never executed
    $$$$$:  241-block 17
call   28 never executed
branch 29 never executed
branch 30 never executed
    $$$$$:  241-block 18
call   31 never executed
    $$$$$:  241-block 19
call   32 never executed
        1:  242:    CHECK(e1->equals(e3) == false);
        1:  242-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  242-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  242-block  2
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  242-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  242-block  4
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  242-block  5
call   18 returned 1
        1:  242-block  6
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:  242-block  7
call   22 returned 1
    $$$$$:  242-block  8
    $$$$$:  242-block  9
    $$$$$:  242-block 10
    $$$$$:  242-block 11
call   23 never executed
    $$$$$:  242-block 12
    $$$$$:  242-block 13
    $$$$$:  242-block 14
    $$$$$:  242-block 15
    $$$$$:  242-block 16
call   24 never executed
call   25 never executed
branch 26 never executed
branch 27 never executed
    $$$$$:  242-block 17
call   28 never executed
branch 29 never executed
branch 30 never executed
    $$$$$:  242-block 18
call   31 never executed
    $$$$$:  242-block 19
call   32 never executed
        1:  243:    CHECK(e1->has_variable() == false);
        1:  243-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  243-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  243-block  2
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  243-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  243-block  4
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  243-block  5
call   18 returned 1
        1:  243-block  6
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:  243-block  7
call   22 returned 1
    $$$$$:  243-block  8
    $$$$$:  243-block  9
    $$$$$:  243-block 10
    $$$$$:  243-block 11
call   23 never executed
    $$$$$:  243-block 12
    $$$$$:  243-block 13
    $$$$$:  243-block 14
    $$$$$:  243-block 15
    $$$$$:  243-block 16
call   24 never executed
call   25 never executed
branch 26 never executed
branch 27 never executed
    $$$$$:  243-block 17
call   28 never executed
branch 29 never executed
branch 30 never executed
    $$$$$:  243-block 18
call   31 never executed
    $$$$$:  243-block 19
call   32 never executed
        1:  244:    CHECK(e4->has_variable() == true);
        1:  244-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  244-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  244-block  2
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  244-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  244-block  4
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  244-block  5
call   18 returned 1
        1:  244-block  6
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:  244-block  7
call   22 returned 1
    $$$$$:  244-block  8
    $$$$$:  244-block  9
    $$$$$:  244-block 10
    $$$$$:  244-block 11
call   23 never executed
    $$$$$:  244-block 12
    $$$$$:  244-block 13
    $$$$$:  244-block 14
    $$$$$:  244-block 15
    $$$$$:  244-block 16
call   24 never executed
call   25 never executed
branch 26 never executed
branch 27 never executed
    $$$$$:  244-block 17
call   28 never executed
branch 29 never executed
branch 30 never executed
    $$$$$:  244-block 18
call   31 never executed
    $$$$$:  244-block 19
call   32 never executed
        1:  245:    CHECK( (new Add(new Var("x"), new Num(7)))
        1:  245-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  245-block  1
call    6 returned 1
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:  245-block  2
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
        1:  245-block  3
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:  245-block  4
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
        1:  245-block  5
call   19 returned 1
call   20 returned 1
branch 21 taken 1 (fallthrough)
branch 22 taken 0 (throw)
        1:  245-block  6
call   23 returned 1
call   24 returned 1
call   25 returned 1
branch 26 taken 1 (fallthrough)
branch 27 taken 0 (throw)
        1:  245-block  7
call   28 returned 1
branch 29 taken 1 (fallthrough)
branch 30 taken 0 (throw)
        1:  245-block  8
call   31 returned 1
branch 32 taken 1 (fallthrough)
branch 33 taken 0 (throw)
        1:  245-block  9
call   34 returned 1
call   35 returned 1
branch 36 taken 1 (fallthrough)
branch 37 taken 0 (throw)
        1:  245-block 10
call   38 returned 1
branch 39 taken 1 (fallthrough)
branch 40 taken 0 (throw)
        1:  245-block 11
call   41 returned 1
call   42 returned 1
branch 43 taken 1 (fallthrough)
branch 44 taken 0 (throw)
        1:  245-block 12
call   45 returned 1
branch 46 taken 1 (fallthrough)
branch 47 taken 0 (throw)
        1:  245-block 13
call   48 returned 1
branch 49 taken 1 (fallthrough)
branch 50 taken 0 (throw)
        1:  245-block 14
call   51 returned 1
branch 52 taken 1 (fallthrough)
branch 53 taken 0 (throw)
        1:  245-block 15
call   54 returned 1
call   55 returned 1
branch 56 taken 1 (fallthrough)
branch 57 taken 0 (throw)
        1:  245-block 16
call   58 returned 1
call   59 returned 1
branch 60 taken 1 (fallthrough)
branch 61 taken 0 (throw)
        1:  245-block 17
call   62 returned 1
branch 63 taken 1 (fallthrough)
branch 64 taken 0 (throw)
        1:  245-block 18
call   65 returned 1
branch 66 taken 1 (fallthrough)
branch 67 taken 0 (throw)
        1:  245-block 19
call   68 returned 1
call   69 returned 1
call   70 returned 1
call   71 returned 1
call   72 returned 1
call   73 returned 1
call   74 returned 1
call   75 returned 1
        1:  245-block 20
call   76 returned 1
branch 77 taken 1 (fallthrough)
branch 78 taken 0 (throw)
        1:  245-block 21
call   79 returned 1
    $$$$$:  245-block 22
    $$$$$:  245-block 23
    $$$$$:  245-block 24
    $$$$$:  245-block 25
call   80 never executed
    $$$$$:  245-block 26
call   81 never executed
    $$$$$:  245-block 27
call   82 never executed
    $$$$$:  245-block 28
    $$$$$:  245-block 29
    $$$$$:  245-block 30
call   83 never executed
    $$$$$:  245-block 31
    $$$$$:  245-block 32
call   84 never executed
    $$$$$:  245-block 33
    $$$$$:  245-block 34
call   85 never executed
    $$$$$:  245-block 35
    $$$$$:  245-block 36
call   86 never executed
    $$$$$:  245-block 37
    $$$$$:  245-block 38
call   87 never executed
    $$$$$:  245-block 39
    $$$$$:  245-block 40
call   88 never executed
    $$$$$:  245-block 41
    $$$$$:  245-block 42
call   89 never executed
    $$$$$:  245-block 43
    $$$$$:  245-block 44
call   90 never executed
    $$$$$:  245-block 45
    $$$$$:  245-block 46
    $$$$$:  245-block 47
call   91 never executed
call   92 never executed
branch 93 never executed
branch 94 never executed
    $$$$$:  245-block 48
call   95 never executed
branch 96 never executed
branch 97 never executed
    $$$$$:  245-block 49
call   98 never executed
    $$$$$:  245-block 50
call   99 never executed
        -:  246:                   ->subst("x", new Var("y"))
        -:  247:                   ->equals(new Add(new Var("y"), new Num(7))) );
        1:  248:    CHECK(e1->to_string(false) == "((3+2)*(2*3))");
        1:  248-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  248-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  248-block  2
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  248-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  248-block  4
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  248-block  5
call   18 returned 1
call   19 returned 1
        1:  248-block  6
call   20 returned 1
branch 21 taken 1 (fallthrough)
branch 22 taken 0 (throw)
        1:  248-block  7
call   23 returned 1
    $$$$$:  248-block  8
    $$$$$:  248-block  9
    $$$$$:  248-block 10
    $$$$$:  248-block 11
call   24 never executed
    $$$$$:  248-block 12
    $$$$$:  248-block 13
    $$$$$:  248-block 14
    $$$$$:  248-block 15
call   25 never executed
    $$$$$:  248-block 16
    $$$$$:  248-block 17
    $$$$$:  248-block 18
call   26 never executed
call   27 never executed
branch 28 never executed
branch 29 never executed
    $$$$$:  248-block 19
call   30 never executed
branch 31 never executed
branch 32 never executed
    $$$$$:  248-block 20
call   33 never executed
    $$$$$:  248-block 21
call   34 never executed
        1:  249:    CHECK(e1->to_string(true) == "(3 + 2) * 2 * 3");
        1:  249-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  249-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  249-block  2
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  249-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  249-block  4
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  249-block  5
call   18 returned 1
call   19 returned 1
        1:  249-block  6
call   20 returned 1
branch 21 taken 1 (fallthrough)
branch 22 taken 0 (throw)
        1:  249-block  7
call   23 returned 1
    $$$$$:  249-block  8
    $$$$$:  249-block  9
    $$$$$:  249-block 10
    $$$$$:  249-block 11
call   24 never executed
    $$$$$:  249-block 12
    $$$$$:  249-block 13
    $$$$$:  249-block 14
    $$$$$:  249-block 15
call   25 never executed
    $$$$$:  249-block 16
    $$$$$:  249-block 17
    $$$$$:  249-block 18
call   26 never executed
call   27 never executed
branch 28 never executed
branch 29 never executed
    $$$$$:  249-block 19
call   30 never executed
branch 31 never executed
branch 32 never executed
    $$$$$:  249-block 20
call   33 never executed
    $$$$$:  249-block 21
call   34 never executed
        1:  250:    CHECK(e5->to_string(false) == "(((3+2)+(2*3))*(2*3))");
        1:  250-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  250-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  250-block  2
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  250-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  250-block  4
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  250-block  5
call   18 returned 1
call   19 returned 1
        1:  250-block  6
call   20 returned 1
branch 21 taken 1 (fallthrough)
branch 22 taken 0 (throw)
        1:  250-block  7
call   23 returned 1
    $$$$$:  250-block  8
    $$$$$:  250-block  9
    $$$$$:  250-block 10
    $$$$$:  250-block 11
call   24 never executed
    $$$$$:  250-block 12
    $$$$$:  250-block 13
    $$$$$:  250-block 14
    $$$$$:  250-block 15
call   25 never executed
    $$$$$:  250-block 16
    $$$$$:  250-block 17
    $$$$$:  250-block 18
call   26 never executed
call   27 never executed
branch 28 never executed
branch 29 never executed
    $$$$$:  250-block 19
call   30 never executed
branch 31 never executed
branch 32 never executed
    $$$$$:  250-block 20
call   33 never executed
    $$$$$:  250-block 21
call   34 never executed
        1:  251:    CHECK(e6->to_string(true) == "(2 * 2) * (2 + 3) * (2 + 2) * (2 * 3)");
        1:  251-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  251-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  251-block  2
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  251-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  251-block  4
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  251-block  5
call   18 returned 1
call   19 returned 1
        1:  251-block  6
call   20 returned 1
branch 21 taken 1 (fallthrough)
branch 22 taken 0 (throw)
        1:  251-block  7
call   23 returned 1
    $$$$$:  251-block  8
    $$$$$:  251-block  9
    $$$$$:  251-block 10
    $$$$$:  251-block 11
call   24 never executed
    $$$$$:  251-block 12
    $$$$$:  251-block 13
    $$$$$:  251-block 14
    $$$$$:  251-block 15
call   25 never executed
    $$$$$:  251-block 16
    $$$$$:  251-block 17
    $$$$$:  251-block 18
call   26 never executed
call   27 never executed
branch 28 never executed
branch 29 never executed
    $$$$$:  251-block 19
call   30 never executed
branch 31 never executed
branch 32 never executed
    $$$$$:  251-block 20
call   33 never executed
    $$$$$:  251-block 21
call   34 never executed
        1:  252:    CHECK((new Add(new Num(1), new Mult(new Num(2), new Num(3))))->to_string(true) == "1 + 2 * 3");
        1:  252-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  252-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  252-block  2
call    9 returned 1
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
        1:  252-block  3
call   13 returned 1
call   14 returned 1
branch 15 taken 1 (fallthrough)
branch 16 taken 0 (throw)
        1:  252-block  4
call   17 returned 1
call   18 returned 1
branch 19 taken 1 (fallthrough)
branch 20 taken 0 (throw)
        1:  252-block  5
call   21 returned 1
call   22 returned 1
branch 23 taken 1 (fallthrough)
branch 24 taken 0 (throw)
        1:  252-block  6
call   25 returned 1
call   26 returned 1
branch 27 taken 1 (fallthrough)
branch 28 taken 0 (throw)
        1:  252-block  7
call   29 returned 1
branch 30 taken 1 (fallthrough)
branch 31 taken 0 (throw)
        1:  252-block  8
call   32 returned 1
branch 33 taken 1 (fallthrough)
branch 34 taken 0 (throw)
        1:  252-block  9
call   35 returned 1
branch 36 taken 1 (fallthrough)
branch 37 taken 0 (throw)
        1:  252-block 10
call   38 returned 1
call   39 returned 1
        1:  252-block 11
call   40 returned 1
branch 41 taken 1 (fallthrough)
branch 42 taken 0 (throw)
        1:  252-block 12
call   43 returned 1
    $$$$$:  252-block 13
    $$$$$:  252-block 14
    $$$$$:  252-block 15
    $$$$$:  252-block 16
call   44 never executed
    $$$$$:  252-block 17
    $$$$$:  252-block 18
    $$$$$:  252-block 19
    $$$$$:  252-block 20
call   45 never executed
    $$$$$:  252-block 21
    $$$$$:  252-block 22
    $$$$$:  252-block 23
call   46 never executed
call   47 never executed
branch 48 never executed
branch 49 never executed
    $$$$$:  252-block 24
call   50 never executed
branch 51 never executed
branch 52 never executed
    $$$$$:  252-block 25
call   53 never executed
    $$$$$:  252-block 26
call   54 never executed
        1:  253:    CHECK((new Mult(new Num(1), new Mult(new Num(2), new Num(3))))->to_string(true) == "1 * 2 * 3");
        1:  253-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  253-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  253-block  2
call    9 returned 1
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
        1:  253-block  3
call   13 returned 1
call   14 returned 1
branch 15 taken 1 (fallthrough)
branch 16 taken 0 (throw)
        1:  253-block  4
call   17 returned 1
call   18 returned 1
branch 19 taken 1 (fallthrough)
branch 20 taken 0 (throw)
        1:  253-block  5
call   21 returned 1
call   22 returned 1
branch 23 taken 1 (fallthrough)
branch 24 taken 0 (throw)
        1:  253-block  6
call   25 returned 1
call   26 returned 1
branch 27 taken 1 (fallthrough)
branch 28 taken 0 (throw)
        1:  253-block  7
call   29 returned 1
branch 30 taken 1 (fallthrough)
branch 31 taken 0 (throw)
        1:  253-block  8
call   32 returned 1
branch 33 taken 1 (fallthrough)
branch 34 taken 0 (throw)
        1:  253-block  9
call   35 returned 1
branch 36 taken 1 (fallthrough)
branch 37 taken 0 (throw)
        1:  253-block 10
call   38 returned 1
call   39 returned 1
        1:  253-block 11
call   40 returned 1
branch 41 taken 1 (fallthrough)
branch 42 taken 0 (throw)
        1:  253-block 12
call   43 returned 1
    $$$$$:  253-block 13
    $$$$$:  253-block 14
    $$$$$:  253-block 15
    $$$$$:  253-block 16
call   44 never executed
    $$$$$:  253-block 17
    $$$$$:  253-block 18
    $$$$$:  253-block 19
    $$$$$:  253-block 20
call   45 never executed
    $$$$$:  253-block 21
    $$$$$:  253-block 22
    $$$$$:  253-block 23
call   46 never executed
call   47 never executed
branch 48 never executed
branch 49 never executed
    $$$$$:  253-block 24
call   50 never executed
branch 51 never executed
branch 52 never executed
    $$$$$:  253-block 25
call   53 never executed
    $$$$$:  253-block 26
call   54 never executed
        1:  254:    CHECK((new Mult(new Num(1), new Add(new Num(2), new Num(3))))->to_string(true) == "1 * (2 + 3)");
        1:  254-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  254-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  254-block  2
call    9 returned 1
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
        1:  254-block  3
call   13 returned 1
call   14 returned 1
branch 15 taken 1 (fallthrough)
branch 16 taken 0 (throw)
        1:  254-block  4
call   17 returned 1
call   18 returned 1
branch 19 taken 1 (fallthrough)
branch 20 taken 0 (throw)
        1:  254-block  5
call   21 returned 1
call   22 returned 1
branch 23 taken 1 (fallthrough)
branch 24 taken 0 (throw)
        1:  254-block  6
call   25 returned 1
call   26 returned 1
branch 27 taken 1 (fallthrough)
branch 28 taken 0 (throw)
        1:  254-block  7
call   29 returned 1
branch 30 taken 1 (fallthrough)
branch 31 taken 0 (throw)
        1:  254-block  8
call   32 returned 1
branch 33 taken 1 (fallthrough)
branch 34 taken 0 (throw)
        1:  254-block  9
call   35 returned 1
branch 36 taken 1 (fallthrough)
branch 37 taken 0 (throw)
        1:  254-block 10
call   38 returned 1
call   39 returned 1
        1:  254-block 11
call   40 returned 1
branch 41 taken 1 (fallthrough)
branch 42 taken 0 (throw)
        1:  254-block 12
call   43 returned 1
    $$$$$:  254-block 13
    $$$$$:  254-block 14
    $$$$$:  254-block 15
    $$$$$:  254-block 16
call   44 never executed
    $$$$$:  254-block 17
    $$$$$:  254-block 18
    $$$$$:  254-block 19
    $$$$$:  254-block 20
call   45 never executed
    $$$$$:  254-block 21
    $$$$$:  254-block 22
    $$$$$:  254-block 23
call   46 never executed
call   47 never executed
branch 48 never executed
branch 49 never executed
    $$$$$:  254-block 24
call   50 never executed
branch 51 never executed
branch 52 never executed
    $$$$$:  254-block 25
call   53 never executed
    $$$$$:  254-block 26
call   54 never executed
        -:  255:
        -:  256:    // Nullptr
        1:  257:    CHECK(two->equals(add3) == false);
        1:  257-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  257-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  257-block  2
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  257-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  257-block  4
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  257-block  5
call   18 returned 1
        1:  257-block  6
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:  257-block  7
call   22 returned 1
    $$$$$:  257-block  8
    $$$$$:  257-block  9
    $$$$$:  257-block 10
    $$$$$:  257-block 11
call   23 never executed
    $$$$$:  257-block 12
    $$$$$:  257-block 13
    $$$$$:  257-block 14
    $$$$$:  257-block 15
    $$$$$:  257-block 16
call   24 never executed
call   25 never executed
branch 26 never executed
branch 27 never executed
    $$$$$:  257-block 17
call   28 never executed
branch 29 never executed
branch 30 never executed
    $$$$$:  257-block 18
call   31 never executed
    $$$$$:  257-block 19
call   32 never executed
        1:  258:    CHECK(mult1->equals(add3) == false);
        1:  258-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  258-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  258-block  2
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  258-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  258-block  4
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  258-block  5
call   18 returned 1
        1:  258-block  6
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:  258-block  7
call   22 returned 1
    $$$$$:  258-block  8
    $$$$$:  258-block  9
    $$$$$:  258-block 10
    $$$$$:  258-block 11
call   23 never executed
    $$$$$:  258-block 12
    $$$$$:  258-block 13
    $$$$$:  258-block 14
    $$$$$:  258-block 15
    $$$$$:  258-block 16
call   24 never executed
call   25 never executed
branch 26 never executed
branch 27 never executed
    $$$$$:  258-block 17
call   28 never executed
branch 29 never executed
branch 30 never executed
    $$$$$:  258-block 18
call   31 never executed
    $$$$$:  258-block 19
call   32 never executed
        1:  259:    CHECK(add1->equals(mult1) == false);
        1:  259-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  259-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  259-block  2
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  259-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  259-block  4
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  259-block  5
call   18 returned 1
        1:  259-block  6
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:  259-block  7
call   22 returned 1
    $$$$$:  259-block  8
    $$$$$:  259-block  9
    $$$$$:  259-block 10
    $$$$$:  259-block 11
call   23 never executed
    $$$$$:  259-block 12
    $$$$$:  259-block 13
    $$$$$:  259-block 14
    $$$$$:  259-block 15
    $$$$$:  259-block 16
call   24 never executed
call   25 never executed
branch 26 never executed
branch 27 never executed
    $$$$$:  259-block 17
call   28 never executed
branch 29 never executed
branch 30 never executed
    $$$$$:  259-block 18
call   31 never executed
    $$$$$:  259-block 19
call   32 never executed
        1:  260:    CHECK(var1->equals(mult1) == false);
        1:  260-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  260-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  260-block  2
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  260-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  260-block  4
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  260-block  5
call   18 returned 1
        1:  260-block  6
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:  260-block  7
call   22 returned 1
    $$$$$:  260-block  8
    $$$$$:  260-block  9
    $$$$$:  260-block 10
    $$$$$:  260-block 11
call   23 never executed
    $$$$$:  260-block 12
    $$$$$:  260-block 13
    $$$$$:  260-block 14
    $$$$$:  260-block 15
    $$$$$:  260-block 16
call   24 never executed
call   25 never executed
branch 26 never executed
branch 27 never executed
    $$$$$:  260-block 17
call   28 never executed
branch 29 never executed
branch 30 never executed
    $$$$$:  260-block 18
call   31 never executed
    $$$$$:  260-block 19
call   32 never executed
        -:  261:
        -:  262:
        -:  263:
        -:  264:
        -:  265:
        -:  266:
        1:  267:}
        -:  268:
        -:  269:
